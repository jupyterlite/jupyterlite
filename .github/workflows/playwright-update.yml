name: Update Playwright Snapshots

on:
  issue_comment:
    types: [created, edited]

permissions:
  contents: write
  pull-requests: write

jobs:
  update-snapshots:
    if:
      ${{ github.event.issue.pull_request && contains(github.event.comment.body, 'update
      playwright snapshots') }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [firefox, chromium]

    steps:
      - name: React to the triggering comment
        run: |
          gh api repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions --raw-field 'content=+1'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout the branch from the PR that triggered the job
        run: |
          # PR branch remote must be checked out using https URL
          git config --global hub.protocol https

          gh pr checkout ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

      - name: Build
        uses: ./.github/actions/build-dist

      - name: Install the package
        run: |
          cd dist
          python -m pip install -vv jupyterlite_core*.whl

          # disable git hooks
          git config core.hooksPath no-hooks

      - name: Install the test dependencies
        run: |
          cd ui-tests
          jlpm
          python3 -m pip install -r requirements.txt
          jlpm build
          jlpm playwright install

      - name: Update snapshots
        uses: jupyterlab/maintainer-tools/.github/actions/update-snapshots@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          npm_client: jlpm
          test_folder: ui-tests
          start_server_script: 'null'
          update_script: test:update --browser ${{ matrix.browser }}
        env:
          DEBUG: pw:webserver
